---
title: Using App Automator for PCF
owner: CF EATs
---

<strong><%= modified_date %></strong>

This topic describes how to install App Automator for Pivotal Cloud Foundry (PCF). It also describes how to create the App Automator for PCF manifest file. 

## <a id='installing'></a> Install App Automator for PCF

Operators can install App Automator for PCF on one or more spaces in the PCF deployment. App Automator can be used to define triggers and actions for apps within the given space. 

To install App Automator for PCF, download App Automator from Pivnet, navigate to the desired space in your PCF deployment, and run the following command:

```
cf install-app-automator -p PASSWORD
``` 

Where:

- `PASSWORD` is a space-wide password for accessing App Automator.

Installing App Automator on a space creates space-wide user credentials. The username is `pvtl_appauto_SPACE_GUID`, where `SPACE_GUID` is the GUID of the given space. The operator defines the password as part of the command for installing App Automator. 

## <a id='define'></a> Create the App Automator for PCF Manifest File

App Automator executes automated actions against an app when the conditions of a given trigger are met. Developers can define these triggers and associated actions by creating a manifest file for App Automator.

The example YAML file below executes a `cf_task` action every 15 minutes. The action runs a command and sets the app memory and disk quota.

<pre>
actions:
 my-action:
   app: my-app
   type: cf_task
   config:
     command: "my command"
     memory_in_mb: 4
     disk_quota_in_mb: 8

triggers:
 every_15m:
   type: schedule
   action: my-action
   expression: "@every 15m"
</pre>

The following are types of actions:

- **Scale**: Scales an app by a specific number of instances, or to a specific number of instances. For example, an App Automator action can scale an app up by two instances. It can also scale an app to a total of two instances. 
- **CF Task**: Performs a CF task. For example, a CF Task action can configure memory or disk quota for an app.

The following are types of triggers:

- **Metric**: Metric triggers define a threshold for an app metric. For example, a trigger can define that an associated action should be executed when
- **Schedule**: Schedule triggers define a regular schedule for executing an action. This can be a recurring or one-time schedule.  

## <a id='configure'></a> Configure App Automator for PCF

Developers can define triggers and actions by creating or editing the App Automator manifest file.    

To configure App Automator, create or edit the App Automator manifest file, run the following command:

```
cf configure-app-automator YOUR-MANIFEST-FILE
```

Where:

  - `YOUR-MANIFEST-FILE` is the name of your App Automator manifest YAML file.